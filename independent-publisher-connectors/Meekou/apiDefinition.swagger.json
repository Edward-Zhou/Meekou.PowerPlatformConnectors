{
    "swagger": "2.0",
    "info": {
      "title": "Meekou Share Connector",
      "description": "Provide common functions which help to improve PowerApps & Automate development process.",
      "contact": {
        "name": "米可爱分享",
        "url": "https://blog.meekou.cn/",
        "email": "support@meekou365.onmicrosoft.com"
      },
      "license": {
        "name": "MIT License",
        "url": "https://github.com/aspnetboilerplate/aspnetboilerplate/blob/dev/LICENSE"
      },
      "version": "v1"
    },
    "host": "meekou-fig.azurewebsites.net",
    "schemes": [
      "https"
    ],
    "paths": {
      "/api/File/HtmlToPdf": {
        "post": {
          "tags": [
            "File"
          ],
          "operationId": "HtmlToPdf",
          "parameters": [
            {
              "in": "query",
              "name": "htmlContent",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/api/File/SwaggerThreeToTwo": {
        "post": {
          "tags": [
            "File"
          ],
          "operationId": "SwaggerThreeToTwo",
          "parameters": [
            {
              "in": "query",
              "name": "swaggerUrl",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/api/Math/Evaluate": {
        "post": {
          "tags": [
            "Math"
          ],
          "operationId": "Evaluate",
          "produces": [
            "text/plain",
            "application/json",
            "text/json"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "formula",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Response"
              }
            }
          }
        }
      },
      "/api/Math/Sum": {
        "post": {
          "tags": [
            "Math"
          ],
          "operationId": "Sum",
          "consumes": [
            "application/json",
            "text/json",
            "application/*+json"
          ],
          "produces": [
            "text/plain",
            "application/json",
            "text/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/SumInput"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          }
        }
      },
      "/api/Math/RoundUp": {
        "post": {
          "tags": [
            "Math"
          ],
          "operationId": "RoundUp",
          "produces": [
            "text/plain",
            "application/json",
            "text/json"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "input",
              "type": "number",
              "format": "double"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          }
        }
      },
      "/api/Text/Regex": {
        "post": {
          "tags": [
            "Text"
          ],
          "operationId": "Regex",
          "consumes": [
            "application/json",
            "text/json",
            "application/*+json"
          ],
          "produces": [
            "text/plain",
            "application/json",
            "text/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/RegexInput"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "definitions": {
      "ErrorInfo": {
        "type": "object",
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegexInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/definitions/ErrorInfo"
          },
          "result": { }
        },
        "additionalProperties": false
      },
      "SumInput": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securityDefinitions": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
      }
    }
  }